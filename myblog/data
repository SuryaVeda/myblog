--
-- PostgreSQL database dump
--

-- Dumped from database version 13.3
-- Dumped by pg_dump version 13.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accounts_user; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.accounts_user (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    email character varying(255) NOT NULL,
    username character varying(20) NOT NULL,
    is_active boolean NOT NULL,
    staff boolean NOT NULL,
    admin boolean NOT NULL
);


ALTER TABLE public.accounts_user OWNER TO sk;

--
-- Name: accounts_user_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.accounts_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.accounts_user_id_seq OWNER TO sk;

--
-- Name: accounts_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.accounts_user_id_seq OWNED BY public.accounts_user.id;


--
-- Name: api_blogpost; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_blogpost (
    id bigint NOT NULL,
    heading character varying(500),
    content character varying(500),
    image character varying(100) NOT NULL,
    user_id bigint,
    comments_id bigint
);


ALTER TABLE public.api_blogpost OWNER TO sk;

--
-- Name: api_blogpost_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_blogpost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_blogpost_id_seq OWNER TO sk;

--
-- Name: api_blogpost_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_blogpost_id_seq OWNED BY public.api_blogpost.id;


--
-- Name: api_blogpostcomment; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_blogpostcomment (
    id bigint NOT NULL,
    text character varying(500),
    post_id bigint,
    user_id bigint,
    replies_id bigint
);


ALTER TABLE public.api_blogpostcomment OWNER TO sk;

--
-- Name: api_blogpostcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_blogpostcomment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_blogpostcomment_id_seq OWNER TO sk;

--
-- Name: api_blogpostcomment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_blogpostcomment_id_seq OWNED BY public.api_blogpostcomment.id;


--
-- Name: api_commentreply; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_commentreply (
    id bigint NOT NULL,
    text character varying(500),
    post_id bigint,
    user_id bigint
);


ALTER TABLE public.api_commentreply OWNER TO sk;

--
-- Name: api_commentreply_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_commentreply_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_commentreply_id_seq OWNER TO sk;

--
-- Name: api_commentreply_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_commentreply_id_seq OWNED BY public.api_commentreply.id;


--
-- Name: api_fact; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_fact (
    id bigint NOT NULL,
    para character varying(500)
);


ALTER TABLE public.api_fact OWNER TO sk;

--
-- Name: api_fact_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_fact_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_fact_id_seq OWNER TO sk;

--
-- Name: api_fact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_fact_id_seq OWNED BY public.api_fact.id;


--
-- Name: api_imageupload; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_imageupload (
    id bigint NOT NULL,
    image character varying(100),
    post_id bigint NOT NULL
);


ALTER TABLE public.api_imageupload OWNER TO sk;

--
-- Name: api_imageupload_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_imageupload_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_imageupload_id_seq OWNER TO sk;

--
-- Name: api_imageupload_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_imageupload_id_seq OWNED BY public.api_imageupload.id;


--
-- Name: api_somepost; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_somepost (
    id bigint NOT NULL
);


ALTER TABLE public.api_somepost OWNER TO sk;

--
-- Name: api_somepost_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_somepost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_somepost_id_seq OWNER TO sk;

--
-- Name: api_somepost_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_somepost_id_seq OWNED BY public.api_somepost.id;


--
-- Name: api_travelbulletpoint; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_travelbulletpoint (
    id bigint NOT NULL,
    text character varying(500)
);


ALTER TABLE public.api_travelbulletpoint OWNER TO sk;

--
-- Name: api_travelbulletpoint_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_travelbulletpoint_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_travelbulletpoint_id_seq OWNER TO sk;

--
-- Name: api_travelbulletpoint_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_travelbulletpoint_id_seq OWNED BY public.api_travelbulletpoint.id;


--
-- Name: api_travelpost; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.api_travelpost (
    id bigint NOT NULL,
    heading character varying(500),
    content character varying(50000),
    bullets_id bigint,
    comments_id bigint,
    user_id bigint
);


ALTER TABLE public.api_travelpost OWNER TO sk;

--
-- Name: api_travelpost_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.api_travelpost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.api_travelpost_id_seq OWNER TO sk;

--
-- Name: api_travelpost_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.api_travelpost_id_seq OWNED BY public.api_travelpost.id;


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO sk;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_group_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_id_seq OWNER TO sk;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_group_id_seq OWNED BY public.auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO sk;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_group_permissions_id_seq OWNER TO sk;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_group_permissions_id_seq OWNED BY public.auth_group_permissions.id;


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO sk;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_permission_id_seq OWNER TO sk;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_permission_id_seq OWNED BY public.auth_permission.id;


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO sk;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO sk;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_groups_id_seq OWNER TO sk;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_user_groups_id_seq OWNED BY public.auth_user_groups.id;


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_id_seq OWNER TO sk;

--
-- Name: auth_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_user_id_seq OWNED BY public.auth_user.id;


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO sk;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auth_user_user_permissions_id_seq OWNER TO sk;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.auth_user_user_permissions_id_seq OWNED BY public.auth_user_user_permissions.id;


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO sk;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.django_admin_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_admin_log_id_seq OWNER TO sk;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.django_admin_log_id_seq OWNED BY public.django_admin_log.id;


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO sk;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.django_content_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_content_type_id_seq OWNER TO sk;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.django_content_type_id_seq OWNED BY public.django_content_type.id;


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO sk;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: sk
--

CREATE SEQUENCE public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.django_migrations_id_seq OWNER TO sk;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sk
--

ALTER SEQUENCE public.django_migrations_id_seq OWNED BY public.django_migrations.id;


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: sk
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO sk;

--
-- Name: accounts_user id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.accounts_user ALTER COLUMN id SET DEFAULT nextval('public.accounts_user_id_seq'::regclass);


--
-- Name: api_blogpost id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpost ALTER COLUMN id SET DEFAULT nextval('public.api_blogpost_id_seq'::regclass);


--
-- Name: api_blogpostcomment id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment ALTER COLUMN id SET DEFAULT nextval('public.api_blogpostcomment_id_seq'::regclass);


--
-- Name: api_commentreply id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_commentreply ALTER COLUMN id SET DEFAULT nextval('public.api_commentreply_id_seq'::regclass);


--
-- Name: api_fact id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_fact ALTER COLUMN id SET DEFAULT nextval('public.api_fact_id_seq'::regclass);


--
-- Name: api_imageupload id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_imageupload ALTER COLUMN id SET DEFAULT nextval('public.api_imageupload_id_seq'::regclass);


--
-- Name: api_somepost id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_somepost ALTER COLUMN id SET DEFAULT nextval('public.api_somepost_id_seq'::regclass);


--
-- Name: api_travelbulletpoint id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelbulletpoint ALTER COLUMN id SET DEFAULT nextval('public.api_travelbulletpoint_id_seq'::regclass);


--
-- Name: api_travelpost id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost ALTER COLUMN id SET DEFAULT nextval('public.api_travelpost_id_seq'::regclass);


--
-- Name: auth_group id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group ALTER COLUMN id SET DEFAULT nextval('public.auth_group_id_seq'::regclass);


--
-- Name: auth_group_permissions id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_group_permissions_id_seq'::regclass);


--
-- Name: auth_permission id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_permission ALTER COLUMN id SET DEFAULT nextval('public.auth_permission_id_seq'::regclass);


--
-- Name: auth_user id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user ALTER COLUMN id SET DEFAULT nextval('public.auth_user_id_seq'::regclass);


--
-- Name: auth_user_groups id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_groups ALTER COLUMN id SET DEFAULT nextval('public.auth_user_groups_id_seq'::regclass);


--
-- Name: auth_user_user_permissions id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_user_permissions ALTER COLUMN id SET DEFAULT nextval('public.auth_user_user_permissions_id_seq'::regclass);


--
-- Name: django_admin_log id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_admin_log ALTER COLUMN id SET DEFAULT nextval('public.django_admin_log_id_seq'::regclass);


--
-- Name: django_content_type id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_content_type ALTER COLUMN id SET DEFAULT nextval('public.django_content_type_id_seq'::regclass);


--
-- Name: django_migrations id; Type: DEFAULT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_migrations ALTER COLUMN id SET DEFAULT nextval('public.django_migrations_id_seq'::regclass);


--
-- Data for Name: accounts_user; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.accounts_user (id, password, last_login, email, username, is_active, staff, admin) FROM stdin;
1	pbkdf2_sha256$260000$ccinTjRZ4eDU447SG74Lj6$gQfIsg1vMcMmlpfUzfqlnxtQZ0BCOo1Jd+I/lIYnHnY=	2021-08-15 10:30:32.628521+05:30	sk@gmail.com		t	t	f
\.


--
-- Data for Name: api_blogpost; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_blogpost (id, heading, content, image, user_id, comments_id) FROM stdin;
\.


--
-- Data for Name: api_blogpostcomment; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_blogpostcomment (id, text, post_id, user_id, replies_id) FROM stdin;
\.


--
-- Data for Name: api_commentreply; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_commentreply (id, text, post_id, user_id) FROM stdin;
\.


--
-- Data for Name: api_fact; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_fact (id, para) FROM stdin;
1	four babies are born per second in the world!!\r\n\r\n1.8 people die every second!\r\n\r\nPeople 60 years and older make up 12.3% of the global population.\r\n\r\nMore than 52% of the world's population is under 30 years old.\r\n\r\n
\.


--
-- Data for Name: api_imageupload; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_imageupload (id, image, post_id) FROM stdin;
\.


--
-- Data for Name: api_somepost; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_somepost (id) FROM stdin;
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
\.


--
-- Data for Name: api_travelbulletpoint; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_travelbulletpoint (id, text) FROM stdin;
\.


--
-- Data for Name: api_travelpost; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.api_travelpost (id, heading, content, bullets_id, comments_id, user_id) FROM stdin;
16	Mumbai	Mumbai is the financial capital of india, city located in Maharastra. It is popular for Bollywood, Vada pav, several tourist places like gateway of india, chatrapati shivaji maharaj terminus(also known as VST), sanjay gandhi national Park, Elephanta Caves, kanha caves, and so on.\n            \n It is a group of islands connected various kinds of transportation like locals, metro, busses, mono rails, etc. People of mumbai are called Mumbaikar. Here you can see people from various places residing , speaking various languages. Here regional languages are marathi and hindi. There are several beaches and many other tourist places to visit in mumbai.Each and every place have its own story. I will explain you my whole journey please continue reading.\n\nBest 10 places i visited in mumbai are\n1. CSMT(VT)\n2. Siddi Vinayak Mandir and Maha Laxmi Mandir\n3. Haji Ali dargah\n4. Sanjay Gandhi national park\n5. Elephanta caves\n6. Gateway of india\n7. Marine drive\n8. Juhu beach\n9. Mount mary Bandra\n10. Dharavi\n\nThere are several other places to visit. I will add those details as well, like Matunga, Sion for best food, zoo, other beaches, thane(a town in Maharastra), Navi Mumbai \n \n 	\N	23	\N
15	Valley of flowers trek	This trek is ideal for beginners. You dont need to carry trek equipments, food and stay are very cheap so this trek qualifies as the best budget treks that one can do in uttarakhand. \n\nApart from the national park, you can visit hemkunt, the highest placed gurudwara, you can witness the sight of amazing valleys, glaciers and formation of alkananda river(important tributary of Ganges). \n \n1) Explore Joshimath if possible, Many ancient temples with cultural significance( shankarmath )\n\n2) Visit Auli (10km from joshimath), skiing destination and base camp for kauri pass.(Also for beginners, 4day trek, basic equipments)\n\n3) Visit Badrinath.\n\n4) Bath in pond near Hemkunt. \n \n <b>DONOT FORGET TO PACK RAINCOAT!</b>\n\n<h2 style="font-size: '20px';">Logistics</h2>\nTOTAL BUDGET: &lt; Rs. 1500 from Rishikesh. \n\n1)  Delhi to Rishikesh(bus best option, fare:Rs 250 Non Ac) or Dehradun airport to Rishikesh(40Rs from Airport Mainroad to Rishikesh)\n\n2)  Rishikesh to Govindghat(12hrs, fare: Rs. 420), Board any bus going to badrinath, Stay in Gurudwara(Govindghat), free stay.\n\n3)  Govindghat to Ghangria(13km, 6hr appx trek.), Easy, no need of Equipments, Raincoat must. Many Rest stops.\n\n4)  Stay in Gurudwara, Ghangria. Free of cost. or do Valley of Flowers trek(4km from Ghangria, Entry fee:Rs. 150, Easy, 1.5hrs to reach. appx)\n\n5) Ghangria to Hemkunt, little difficult, might experience Altitude sickness. Many Rest stops and best part of the trek.\n\n6) hemkunt to Govindghat return 4 hrs max.\n\n\n\nThe only way to go to the national park is from Rishikesh. Rishikesh, recently a metropolitan city is a place where you can get everything. From trekking equipment to Italian food you can get it here.\n\nFrom Rishikesh get on the first bus to Joshimath(around 5am, fare 390Rs). You will reach Joshimath around 4 pm, journey will be hectic and you know about pahadi roads so many turns and unexpected showers you will throw up for sure. i have a tip to prevent nausea. The secret is don't eat anything before journey, during journey. If you are hungry take fluids.\n\nIf you are on low budget, I would recommend to reach Govind ghat on the same day, as you can stay at Gurudwara in Govind ghat for free. Next day hike to Ghangria from Govindghat(13km).\n\nThe hike is easy, through the forests and there are so many rest points , shops and bathrooms. So don't worry about food.\nIt took me six hours to reach Ghangria. Ghangria is a small town which acts as a junction point to Hemkund and valley of flowers. It is 13km from Govind Ghat.In Ghangria, I stayed in Gurudwara  as it is free and really the best place to stay. if you want to book a room prefer GMVN guest houses, other private rooms are very costly and the facility is also not that good. You can also camp there.\n\nFrom Ghangria, National park is 4km, hemkunt is 8km. Hemkunt is little bit difficult but there are so many rest points and hotels, You can do it easily.	\N	24	\N
20	Parashar Lake	Weekend, Low budget, Accessible by road.\n\nParashar lake is located near Mandi and has a historical significance. It is a well known tourist spot for locals.\n\nThis place is absolutely amazing in winter season with frozen lake. On the way to Parashar lake you get to see IIT Mandi, The architecture of campus is just impressive.\n\nIn Parashar lake, walk for 7km uphill you will find a temple. The temple overlooks parashar lake and has got beautiful views of sunrise and sunset which is worth watching. \n\nOn the way to Parashar lake you get to see IIT Mandi, The architecture of campus is just impressive.\n\n<h2 style="font-size: 20px;">Logistics</h2> \nBUDGET: &lt; Rs 1200/1 night hotel stay, cheaper if you have your tent.  \n\nYou can either trek to Parashar lake from Mandi(15-20km) or take a bus that goes early morning around 7am.\n\nDay 1: Chandigarh to Mandi (Rs 300 appx, 6-8hrs, Non AC), Try to reach Mandi by 6am.\n\nDay 2: Mandi to Parashar lake , bus(Rs 80, 2.5hrs, NonAC), car(Rs 1000appx, roundtrip)\n            Stay at Parashar lake in hotel(Rs 300/night to Rs2000/night) or stay at ashram in parashar lake(Rs 150/night). Ashrams are pre booked during peak season.\n\nDay 3: Parashar lake to Mandi(similar rates), Only one bus available around 12pm.	\N	28	\N
18	Sar Pass	Easy, 2-3 nights trek, weekend trek, well marked trail, can do it solo in right season.\n\nStarting with a lovely village, Grahan, to mesmerizing views of himalayan ranges this trek is ideal for beginners who wish to have adventure. It's not just the views, trek especially the day you cross the pass is very exciting and you get to slide for &gt; 600m after crossing the pass. It's an experience worth having at least once in your life.\n\nKasol is a beautiful destination in India with amazing Restaurants, So eat, explore and smoke.\n\nExplore Grahan, there is a school overlooking the whole town and by far the best school view. Play with kids, YHAI regularly organizes the trek, go to their camp, there will be Bonfire every night, hangout with other trekkers, make few friends.\n\nThere are no hotels after Grahan, so it's better to carry food for next 2 days. Water is available, so just carry 2 bottles of water.\n\nMin Thatch is a small grassland, its not worth camping there, so i suggest to go ahead to Nagaru. You can get Jio signal in Nagaru, I watched IPL match too.\n\nThe view from Nagaru is just the beginning, have patience and continue to Sar pass next morning, You will be surprised for sure.\n\n<h2 style="font-size: 20px;">Logistics</h2> \nBUDGET: (appx: Rs: 1.5k -2k) from Chandigarh to Chandigarh, excluding trek equipments like tent, sleeping bag.\n\nDay 1: Chandigarh ISBT 43 to Bhuntar(appx 8hrs, Rs:400, NonAc), Reach Bhuntar by morning. 5AM bus to Kasol.\n\nDay 2: Bhuntar to Kasol( 5AM bus, 2hrs appx, Rs 80.), Rent tent, sleeping bag(Rs 300/day) or bring your own\n            Kasol to Grahan(start by 12pm, 5hrs appx, easy trek, 10-15km). Stay in Grahan, tent or room(Rs 200/day/2persons)\n\nDay 3: Grahan to Min Thatch( appx 3hrs, 7km, tough climb in beginning, but gets easy.)\n            Min Thatch to Nagaru( appx 4hrs, 8km, can get breathlessness due to increase in altitude, relatively easy.), Jio signal present at Nagaru. Stay in Nagaru, tent.\n\nDay 4: Nagaru to Sar pass to Biskeri Thatch(Start by 5am, long day. 2hrs to Sar Pass, 3hrs to Biskeri Thatch), Stay in Biskeri or,\n            Biskeri Thatch to Bursheni(4-5hrs), do it if you are not tired. Stay at hotel in Bursheni (Rs 500/night/4persons)\n\nDay 5: Bursheni to Kasol to Bhuntar to Chandigarh( Similar rates as above)\n	\N	26	\N
17	Dayara Bugyal	It is another easy low budget high altitude trek which can be done on a weekend. Trek experience varies with season, with spring being the best, but It is also beautiful in winters and rainy seasons.\n\nThe trail is well marked, You can do it solo, don't need a guide in peak season. Trek can begin from two different basecamps with Barsu being best because it is accessible by public transport. Barsu is a village so you can get food items to begin your trek. Since the trek is very short, you dont need make any arrangements for food.fun \n \nIn Barsu, talk to few locals, There is an ancient temple with wonderful stories near the village, visit it.\n\nBarsu is a beautiful village, there are many beautiful hidden waterfalls that only locals know about. So befriend one and explore.\n\nAfter reaching Dayara basecamp try to explore ahead. The view of Himalayan ranges is mesmerizing and sunset in Dayara is best experience.\n\nLocal are very helpful, there is a small hotel at basecamp which is present only in peak seasons, you get Maggi and biscuits there. Sometimes it is difficult to start camp fire with wood you collect, So don't hesitate to ask help from locals. \n \n<h2 style="font-size: 20px;">Logistics</h2> \nBUDGET: &lt; Rs. 1000 from Rishikesh to Rishikesh, (3 days trip), if you have your own tent and sleeping bag.\n\nDay 1: Rishikesh to Uttarkashi( Fare: Rs 250, 6-8hrs), try to board as early as possible and reach uttarkashi by 2pm.\n           Uttarkashi to Barsu( Fare: Rs 80, 3-4hrs appx), There is one bus available around 2pm to 3pm.\n           Stay in your Tent Or in GMVN guest house(Rs 150 for dormitory, Rs 500 for Non Ac Room), Rates may vary with season.\n\nDay 2: Start your trek early in morning for Barsu.(10km to Dayara basecamp, appx 5hrs trek), water not available till base camp so it is better to carry 3 bottles.\n           Explore Dayara Bugyal from basecamp, sunset and campfire are amazing experiences.\n\nDay 3: Start your return trek to Barsu early in morning(by 5am) if you want to catch the only bus that leaves Barsu to Uttarkashi around 9 am.\n           From Uttarkashi return to RIshikesh or doon(similar price range as above.)	\N	25	\N
19	Choptha-Tunganath	Easy, beginner, High altitude trek, Can be done Solo, without guide.\n\nThis is a lovely one day trek, due to increase in popularity, it has become a tourist spot. Chopta is a village near Ukhimath(en route Kedarnath). It is basecamp for Tunganath Temple which is located 8km from choptha. This place is filled with pilgrims during season of shivratri, So don't go during March, April. You can visit Tunganath anytime of year.\n\nTunganath is the highest lord shiva temple, higher than kedarnath. \n\nDuring Trek, You will be able to see various Himalayan ranges in 360 degree view. You can continue your trek to Chandrashiela which can be difficult and dangerous in winter season. \n \n1) Explore Tunganath village, it is abandoned in winters.\n\n2) In Devprayag there is union between Bhagirathi river(from gaumukh, gangotri glacier) and Alkananda river(from Badrinath and above)\n\n3) From Choptha there is shortcut to Joshimath, Visit Auli.\n\n4) Deorital lake near chopta, you can trek or go by vehicle. 10Km from choptha. Nice place to camp. \n\n<h2 style="font-size: 20px;">Logistics</h2> \nTOTAL BUDGET: &lt; Rs. 1500 from Rishikesh. Weekend trip, 1 day trek.\n\n1)  Delhi to Rishikesh(bus best option, fare:Rs 250 Non Ac) or Dehradun airport to Rishikesh(40Rs from Airport Mainroad to Rishikesh)\n\n2)  Rishikesh to Rudraprayag(6hrs, fare: Rs. 200 appx), Board any bus going to badrinath. \n     Rudraprayag to Ukhimath(4hrs appx. Rs. 80).\n     Ukimath to Choptha(Rs. 50, 20km, Share cab, no buses), During off season, you might not find share cabs, and must hire a cab(Rs 1000 at least.)\n\n4)  Stay in Choptha, Tent or room(Rs 150 for 2 people bed/day), there are few hotels in Choptha, GMVN is present little ahead of choptha.\n\n5) Choptha to Tunganath(4hrs max)\n     Tunganath to Chandrashiela(2hrs max), if possible.\n\n6) Similar return journey.	\N	27	\N
21	Kedarkantha 	It is another easy low budget high altitude trek which can be done on a weekend. Trek experience varies with season, with winters being the best, but It is also beautiful in summer and rainy seasons.\n\nThe trail is well marked, You can do it solo, don't need a guide in peak season. Trek begins from Sankri which is accessible by public transport. Sankri is a village in Uttarkashi district, trek accessories and food are available at reasonable rates in Sankri . \n \nKedarkantha basecamp is one of the most beautiful places to camp. Best in winter season.\n\nYou might think that Sunrise and Sunset are beautiful but wait for a while to see the Night show of millions of sparkling stars, an experience worth having.\n\nTrek to Peak is thrilling and you can slide all the way down from the peak.\n\nFrom Sankri you can also trek to Harki-dun which has similar itinerary but a little bit longer.\n\n\n\n<h2>Logistics </h2>\nBUDGET: &lt; Rs. 1500 from Dehradun to Dehradun, (3 days trip), if you have your own tent and sleeping bag.\n\nDay 1: Dehradun to Sankri( Fare: Rs 400, 10-12 hrs), only fews buses are available directly to sankri and all are available from Prince chowk. Public bus departs by 8am from Prince chowk bus stand.\n          Stay in your Tent Or in GMVN guest house(Rs 150 for dormitory, Rs 500 for Non Ac Room), Rates may vary with season.\n\nDay 2: Start your trek early in morning for Kedarkantha Basecamp.(8km to Kedarkantha basecamp, appx 5hrs trek), water not available till base camp so it is better to carry 3 bottles.\n          Explore basecamp, sunset and campfire are amazing experiences. You might need to camp at Juda-ka-Talab during winter season, as it is difficult to hike on snow.\n\nDay 3: Start your trek to Kedarkantha peak early in morning(by 5am), 4km trek, 2-3hrs max. Explore Peak.\n          From Peak return to Sankri (4hrs max)\n\nDay 4: Sankri to Doon(similar price range as above.)\n\n\n	\N	29	\N
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add fact	1	add_fact
2	Can change fact	1	change_fact
3	Can delete fact	1	delete_fact
4	Can view fact	1	view_fact
5	Can add blog post	2	add_blogpost
6	Can change blog post	2	change_blogpost
7	Can delete blog post	2	delete_blogpost
8	Can view blog post	2	view_blogpost
9	Can add blog post comment	3	add_blogpostcomment
10	Can change blog post comment	3	change_blogpostcomment
11	Can delete blog post comment	3	delete_blogpostcomment
12	Can view blog post comment	3	view_blogpostcomment
13	Can add travel post	4	add_travelpost
14	Can change travel post	4	change_travelpost
15	Can delete travel post	4	delete_travelpost
16	Can view travel post	4	view_travelpost
17	Can add travel bullet point	5	add_travelbulletpoint
18	Can change travel bullet point	5	change_travelbulletpoint
19	Can delete travel bullet point	5	delete_travelbulletpoint
20	Can view travel bullet point	5	view_travelbulletpoint
21	Can add image upload	6	add_imageupload
22	Can change image upload	6	change_imageupload
23	Can delete image upload	6	delete_imageupload
24	Can view image upload	6	view_imageupload
25	Can add comment reply	7	add_commentreply
26	Can change comment reply	7	change_commentreply
27	Can delete comment reply	7	delete_commentreply
28	Can view comment reply	7	view_commentreply
29	Can add some post	8	add_somepost
30	Can change some post	8	change_somepost
31	Can delete some post	8	delete_somepost
32	Can view some post	8	view_somepost
33	Can add user	9	add_user
34	Can change user	9	change_user
35	Can delete user	9	delete_user
36	Can view user	9	view_user
37	Can add log entry	10	add_logentry
38	Can change log entry	10	change_logentry
39	Can delete log entry	10	delete_logentry
40	Can view log entry	10	view_logentry
41	Can add permission	11	add_permission
42	Can change permission	11	change_permission
43	Can delete permission	11	delete_permission
44	Can view permission	11	view_permission
45	Can add group	12	add_group
46	Can change group	12	change_group
47	Can delete group	12	delete_group
48	Can view group	12	view_group
49	Can add user	13	add_user
50	Can change user	13	change_user
51	Can delete user	13	delete_user
52	Can view user	13	view_user
53	Can add content type	14	add_contenttype
54	Can change content type	14	change_contenttype
55	Can delete content type	14	delete_contenttype
56	Can view content type	14	view_contenttype
57	Can add session	15	add_session
58	Can change session	15	change_session
59	Can delete session	15	delete_session
60	Can view session	15	view_session
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	api	fact
2	api	blogpost
3	api	blogpostcomment
4	api	travelpost
5	api	travelbulletpoint
6	api	imageupload
7	api	commentreply
8	api	somepost
9	accounts	user
10	admin	logentry
11	auth	permission
12	auth	group
13	auth	user
14	contenttypes	contenttype
15	sessions	session
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	accounts	0001_initial	2021-08-15 08:44:49.610014+05:30
2	contenttypes	0001_initial	2021-08-15 08:44:49.617407+05:30
3	auth	0001_initial	2021-08-15 08:44:49.656375+05:30
4	admin	0001_initial	2021-08-15 08:44:49.670514+05:30
5	admin	0002_logentry_remove_auto_add	2021-08-15 08:44:49.676007+05:30
6	admin	0003_logentry_add_action_flag_choices	2021-08-15 08:44:49.681812+05:30
7	api	0001_initial	2021-08-15 08:44:49.686952+05:30
8	api	0002_blogpost	2021-08-15 08:44:49.692235+05:30
9	api	0003_blogpostcomment	2021-08-15 08:44:49.699916+05:30
10	api	0004_travelpost	2021-08-15 08:44:49.704228+05:30
11	api	0005_auto_20210803_1808	2021-08-15 08:44:49.715919+05:30
12	api	0006_alter_travelpost_bullets	2021-08-15 08:44:49.731577+05:30
13	api	0007_auto_20210812_1106	2021-08-15 08:44:49.74177+05:30
14	api	0008_commentreply	2021-08-15 08:44:49.750067+05:30
15	api	0009_auto_20210814_0853	2021-08-15 08:44:49.764772+05:30
16	api	0010_auto_20210814_1048	2021-08-15 08:44:49.795314+05:30
17	api	0011_auto_20210814_1149	2021-08-15 08:44:49.810415+05:30
18	contenttypes	0002_remove_content_type_name	2021-08-15 08:44:49.825601+05:30
19	auth	0002_alter_permission_name_max_length	2021-08-15 08:44:49.831566+05:30
20	auth	0003_alter_user_email_max_length	2021-08-15 08:44:49.837048+05:30
21	auth	0004_alter_user_username_opts	2021-08-15 08:44:49.843697+05:30
22	auth	0005_alter_user_last_login_null	2021-08-15 08:44:49.849172+05:30
23	auth	0006_require_contenttypes_0002	2021-08-15 08:44:49.850489+05:30
24	auth	0007_alter_validators_add_error_messages	2021-08-15 08:44:49.855342+05:30
25	auth	0008_alter_user_username_max_length	2021-08-15 08:44:49.863457+05:30
26	auth	0009_alter_user_last_name_max_length	2021-08-15 08:44:49.868904+05:30
27	auth	0010_alter_group_name_max_length	2021-08-15 08:44:49.875134+05:30
28	auth	0011_update_proxy_permissions	2021-08-15 08:44:49.883327+05:30
29	auth	0012_alter_user_first_name_max_length	2021-08-15 08:44:49.888927+05:30
30	sessions	0001_initial	2021-08-15 08:44:49.897447+05:30
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: sk
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
ke0dby0wx7vnl15ah7cfsmpqgahmdmyx	.eJxVjksOwjAMRO-SNYrycdOYJXvOEDmxQwuolfpZIe5OK1UItvNmnualEq1Ll9ZZptSzOiurTr9ZpvKQYQd8p-E26jIOy9RnvVf0QWd9HVmel6P7J-ho7rY1OGokRhCoOXiM4C0WAt9YwuADcq0SwEUHLRc2uSVE48iIFxc5m036_WjfH33IO0Q:1mF77n:g7QF_04tHwLLVOlhMdbf9coL2aocDG-azOHiKLFMeJI	2021-08-29 09:17:51.028949+05:30
oi0rzdh9z19ecb3nnbn9ec41dohhn825	.eJxVjksOwjAMRO-SNYrycdOYJXvOEDmxQwuolfpZIe5OK1UItvNmnualEq1Ll9ZZptSzOiurTr9ZpvKQYQd8p-E26jIOy9RnvVf0QWd9HVmel6P7J-ho7rY1OGokRhCoOXiM4C0WAt9YwuADcq0SwEUHLRc2uSVE48iIFxc5m036_WjfH33IO0Q:1mF8G8:C4zGUrui3XeMUYl93iVFeQGsRQt-7R34Od3BN_xxuK4	2021-08-29 10:30:32.629804+05:30
\.


--
-- Name: accounts_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.accounts_user_id_seq', 1, true);


--
-- Name: api_blogpost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_blogpost_id_seq', 1, false);


--
-- Name: api_blogpostcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_blogpostcomment_id_seq', 1, false);


--
-- Name: api_commentreply_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_commentreply_id_seq', 1, false);


--
-- Name: api_fact_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_fact_id_seq', 1, true);


--
-- Name: api_imageupload_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_imageupload_id_seq', 1, false);


--
-- Name: api_somepost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_somepost_id_seq', 29, true);


--
-- Name: api_travelbulletpoint_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_travelbulletpoint_id_seq', 1, false);


--
-- Name: api_travelpost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.api_travelpost_id_seq', 21, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 60, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, false);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 15, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sk
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 30, true);


--
-- Name: accounts_user accounts_user_email_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.accounts_user
    ADD CONSTRAINT accounts_user_email_key UNIQUE (email);


--
-- Name: accounts_user accounts_user_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.accounts_user
    ADD CONSTRAINT accounts_user_pkey PRIMARY KEY (id);


--
-- Name: api_blogpost api_blogpost_comments_id_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpost
    ADD CONSTRAINT api_blogpost_comments_id_key UNIQUE (comments_id);


--
-- Name: api_blogpost api_blogpost_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpost
    ADD CONSTRAINT api_blogpost_pkey PRIMARY KEY (id);


--
-- Name: api_blogpostcomment api_blogpostcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment
    ADD CONSTRAINT api_blogpostcomment_pkey PRIMARY KEY (id);


--
-- Name: api_blogpostcomment api_blogpostcomment_replies_id_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment
    ADD CONSTRAINT api_blogpostcomment_replies_id_key UNIQUE (replies_id);


--
-- Name: api_commentreply api_commentreply_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_commentreply
    ADD CONSTRAINT api_commentreply_pkey PRIMARY KEY (id);


--
-- Name: api_fact api_fact_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_fact
    ADD CONSTRAINT api_fact_pkey PRIMARY KEY (id);


--
-- Name: api_imageupload api_imageupload_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_imageupload
    ADD CONSTRAINT api_imageupload_pkey PRIMARY KEY (id);


--
-- Name: api_somepost api_somepost_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_somepost
    ADD CONSTRAINT api_somepost_pkey PRIMARY KEY (id);


--
-- Name: api_travelbulletpoint api_travelbulletpoint_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelbulletpoint
    ADD CONSTRAINT api_travelbulletpoint_pkey PRIMARY KEY (id);


--
-- Name: api_travelpost api_travelpost_comments_id_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost
    ADD CONSTRAINT api_travelpost_comments_id_key UNIQUE (comments_id);


--
-- Name: api_travelpost api_travelpost_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost
    ADD CONSTRAINT api_travelpost_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: accounts_user_email_b2644a56_like; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX accounts_user_email_b2644a56_like ON public.accounts_user USING btree (email varchar_pattern_ops);


--
-- Name: api_blogpost_user_id_f363a0f1; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_blogpost_user_id_f363a0f1 ON public.api_blogpost USING btree (user_id);


--
-- Name: api_blogpostcomment_post_id_f976e668; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_blogpostcomment_post_id_f976e668 ON public.api_blogpostcomment USING btree (post_id);


--
-- Name: api_blogpostcomment_user_id_6971e819; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_blogpostcomment_user_id_6971e819 ON public.api_blogpostcomment USING btree (user_id);


--
-- Name: api_commentreply_post_id_1c39e296; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_commentreply_post_id_1c39e296 ON public.api_commentreply USING btree (post_id);


--
-- Name: api_commentreply_user_id_e13a8d86; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_commentreply_user_id_e13a8d86 ON public.api_commentreply USING btree (user_id);


--
-- Name: api_imageupload_post_id_6342201e; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_imageupload_post_id_6342201e ON public.api_imageupload USING btree (post_id);


--
-- Name: api_travelpost_bullets_id_ff4021cc; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_travelpost_bullets_id_ff4021cc ON public.api_travelpost USING btree (bullets_id);


--
-- Name: api_travelpost_user_id_5aa0d806; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX api_travelpost_user_id_5aa0d806 ON public.api_travelpost USING btree (user_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: sk
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: api_blogpost api_blogpost_comments_id_efb8d935_fk_api_somepost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpost
    ADD CONSTRAINT api_blogpost_comments_id_efb8d935_fk_api_somepost_id FOREIGN KEY (comments_id) REFERENCES public.api_somepost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_blogpost api_blogpost_user_id_f363a0f1_fk_accounts_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpost
    ADD CONSTRAINT api_blogpost_user_id_f363a0f1_fk_accounts_user_id FOREIGN KEY (user_id) REFERENCES public.accounts_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_blogpostcomment api_blogpostcomment_post_id_f976e668_fk_api_somepost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment
    ADD CONSTRAINT api_blogpostcomment_post_id_f976e668_fk_api_somepost_id FOREIGN KEY (post_id) REFERENCES public.api_somepost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_blogpostcomment api_blogpostcomment_replies_id_3c6e14e0_fk_api_somepost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment
    ADD CONSTRAINT api_blogpostcomment_replies_id_3c6e14e0_fk_api_somepost_id FOREIGN KEY (replies_id) REFERENCES public.api_somepost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_blogpostcomment api_blogpostcomment_user_id_6971e819_fk_accounts_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_blogpostcomment
    ADD CONSTRAINT api_blogpostcomment_user_id_6971e819_fk_accounts_user_id FOREIGN KEY (user_id) REFERENCES public.accounts_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_commentreply api_commentreply_post_id_1c39e296_fk_api_somepost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_commentreply
    ADD CONSTRAINT api_commentreply_post_id_1c39e296_fk_api_somepost_id FOREIGN KEY (post_id) REFERENCES public.api_somepost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_commentreply api_commentreply_user_id_e13a8d86_fk_accounts_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_commentreply
    ADD CONSTRAINT api_commentreply_user_id_e13a8d86_fk_accounts_user_id FOREIGN KEY (user_id) REFERENCES public.accounts_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_imageupload api_imageupload_post_id_6342201e_fk_api_travelpost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_imageupload
    ADD CONSTRAINT api_imageupload_post_id_6342201e_fk_api_travelpost_id FOREIGN KEY (post_id) REFERENCES public.api_travelpost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_travelpost api_travelpost_bullets_id_ff4021cc_fk_api_travelbulletpoint_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost
    ADD CONSTRAINT api_travelpost_bullets_id_ff4021cc_fk_api_travelbulletpoint_id FOREIGN KEY (bullets_id) REFERENCES public.api_travelbulletpoint(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_travelpost api_travelpost_comments_id_09b2820c_fk_api_somepost_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost
    ADD CONSTRAINT api_travelpost_comments_id_09b2820c_fk_api_somepost_id FOREIGN KEY (comments_id) REFERENCES public.api_somepost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_travelpost api_travelpost_user_id_5aa0d806_fk_accounts_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.api_travelpost
    ADD CONSTRAINT api_travelpost_user_id_5aa0d806_fk_accounts_user_id FOREIGN KEY (user_id) REFERENCES public.accounts_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: sk
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

